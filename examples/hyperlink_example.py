"""
Example demonstrating Smartsheet hyperlink functionality with project descriptions.
"""

import os
from dotenv import load_dotenv
from src.smartsheet_updater import SmartsheetUpdater

def example_hyperlink_update():
    """
    Example of how the Smartsheet hyperlink update works.
    
    This demonstrates the workflow when a deal is marked as "Closed Won":
    1. OneNote notebook and section are created
    2. Smartsheet row is updated with a hyperlink
    3. Project description is used as the display text
    """
    
    load_dotenv()
    
    # Initialize the updater
    updater = SmartsheetUpdater()
    
    # Example data from a "Closed Won" deal
    sheet_id = int(os.getenv("SMTSHEET_ID", "0"))
    row_id = 2665991261261700  # Replace with actual row ID
    
    # Smartsheet data (from webhook)
    smartsheet_data = {
        'row_id': row_id,
        '1375102739632004': 'Website redesign and e-commerce integration for retail client',  # Description
        '3534360453271428': 'Acme Corp Website Redesign',  # Project Name
        '1475623376867204': 'Acme Corporation',  # Company Name
        '3408182019051396': 'OPP-2024-001',  # Opportunity ID
        '5878702367002500': 'Website Development'  # Project Category
    }
    
    # OneNote URLs (generated by the system)
    notebook_url = "https://bvcollective.sharepoint.com/sites/projects/_layouts/15/OneNote.aspx?id=/sites/projects/Shared%20Documents/Acme%20Corporation%20-%20Public"
    section_url = "https://bvcollective.sharepoint.com/sites/projects/_layouts/15/OneNote.aspx?id=/sites/projects/Shared%20Documents/Acme%20Corporation%20-%20Public/Acme%20Corp%20Website%20Redesign%20-%20OPP-2024-001"
    
    print("=== Smartsheet Hyperlink Update Example ===")
    print(f"Sheet ID: {sheet_id}")
    print(f"Row ID: {row_id}")
    print(f"Project Description: {smartsheet_data['1375102739632004']}")
    print(f"Project Name: {smartsheet_data['3534360453271428']}")
    print(f"Company Name: {smartsheet_data['1475623376867204']}")
    print(f"Opportunity ID: {smartsheet_data['3408182019051396']}")
    print(f"Notebook URL: {notebook_url}")
    print(f"Section URL: {section_url}")
    
    # Update the Smartsheet row with the hyperlink
    success = updater.update_row_with_onenote_url(
        sheet_id=sheet_id,
        row_id=row_id,
        notebook_name=f"{smartsheet_data['1475623376867204']} - Public",
        notebook_url=notebook_url,
        section_url=section_url,
        project_description=smartsheet_data['1375102739632004']  # Use description as display text
    )
    
    if success:
        print("\n‚úÖ Successfully updated Smartsheet row!")
        print("üìù The 'Public Notebook' column now contains:")
        print(f"   Display Text: '{smartsheet_data['1375102739632004']}'")
        print(f"   Hyperlink URL: {section_url}")
        print("\nüîó Users can now click on the description text to open the OneNote section directly.")
    else:
        print("\n‚ùå Failed to update Smartsheet row")
    
    return success

def example_fallback_scenario():
    """
    Example of fallback scenario when project description is not available.
    """
    
    load_dotenv()
    updater = SmartsheetUpdater()
    
    sheet_id = int(os.getenv("SMTSHEET_ID", "0"))
    row_id = 123457  # Different row ID
    
    # Example with missing project description
    smartsheet_data = {
        'row_id': row_id,
        '1375102739632004': None,  # No description available
        '3534360453271428': 'Beta Corp Mobile App',  # Project Name
        '1475623376867204': 'Beta Corporation',  # Company Name
        '3408182019051396': 'OPP-2024-002',  # Opportunity ID
    }
    
    notebook_url = "https://bvcollective.sharepoint.com/sites/projects/_layouts/15/OneNote.aspx?id=/sites/projects/Shared%20Documents/Beta%20Corporation%20-%20Public"
    section_url = "https://bvcollective.sharepoint.com/sites/projects/_layouts/15/OneNote.aspx?id=/sites/projects/Shared%20Documents/Beta%20Corporation%20-%20Public/Beta%20Corp%20Mobile%20App%20-%20OPP-2024-002"
    
    print("\n=== Fallback Scenario Example ===")
    print("Project Description: None (not available)")
    print(f"Fallback to Notebook Name: {smartsheet_data['1475623376867204']} - Public")
    
    success = updater.update_row_with_onenote_url(
        sheet_id=sheet_id,
        row_id=row_id,
        notebook_name=f"{smartsheet_data['1475623376867204']} - Public",
        notebook_url=notebook_url,
        section_url=section_url,
        project_description=None  # No description available
    )
    
    if success:
        print("‚úÖ Successfully updated Smartsheet row with fallback text!")
        print("üìù The 'Public Notebook' column now contains:")
        print(f"   Display Text: '{smartsheet_data['1475623376867204']} - Public'")
        print(f"   Hyperlink URL: {section_url}")
    else:
        print("‚ùå Failed to update Smartsheet row")
    
    return success

if __name__ == "__main__":
    print("Running Smartsheet Hyperlink Examples...\n")
    
    # Run the main example
    example_hyperlink_update()
    
    # Run the fallback example
    example_fallback_scenario()
    
    print("\nüéâ Examples completed!")
    print("\nKey Points:")
    print("- Project Description is used as display text when available")
    print("- Notebook name is used as fallback when description is missing")
    print("- Section URL is preferred over notebook URL")
    print("- Hyperlinks are clickable and take users directly to OneNote") 